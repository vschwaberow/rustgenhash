name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [nightly, stable, '1.60']
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust == 'nightly'}}

    steps:
    - uses: actions/checkout@v3

    - name: Restore Cargo cache
      uses: actions/cache@v2
      env:
        cache-name: rust
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ matrix.os }}-${{ env.cache-name }}-${{ matrix.rust }}-${{ hashFiles('Cargo.lock')}}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        default: true
        profile: minimal
        components: clippy

    - name: Build Debug
      run: |
        cargo build
    
    - name: Run Tests
      run: |
        cargo test
    
    - name: Run Clippy
      run: |
        cargo clippy

    - name: Build the Release
      run: |
        cargo build --release

    - name: Binary Size (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        ls -l ./target/release/rustgenhash
    
    - name: Binary Size (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        ls -l ./target/release/rustgenhash.exe
    
    - name: Binary dependencies (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        otool -L ./target/release/rustgenhash

    - name: Build the MSI install package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cargo install cargo-wix --version 0.3.3
        cargo wix --version
        cargo wix -p rustgenhash --no-build --nocapture --output ./target/wix/rustgenhash.msi
        ls -l ./target/wix/rustgenhash.msi

  build-linux-musl:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, stable, '1.60']
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        default: true
        target: x86_64-unknown-linux-musl

    - name: Setup MUSL
      run: |
        sudo apt-get -qq install musl-tools
    - name: Build Debug
      run: |
        cargo build
        ./target/x86_64-unknown-linux-musl/debug/rustgenhash --version
    - name: Build Release
      run: |
        cargo build --release
        ./target/x86_64-unknown-linux-musl/release/rustgenhash --version
        ls -l ./target/x86_64-unknown-linux-musl/release/gitui
    - name: Test
      run: |
        cargo test

  linting:
      name: Lints
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      
      - run: cargo fmt -- --check

      - name: cargo-sort
        run: |
          cargo install cargo-sort --force
          cargo sort -c -w
      - name: cargo-deny install
        run: |
          cargo install --locked cargo-deny
      - name: cargo-deny licenses
        run: |
          cargo deny check licenses
      - name: cargo-deny bans
        run: |
          cargo deny check bans

  sec:
      name: Security audit
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
